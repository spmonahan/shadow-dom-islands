diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js b/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js
index c040354..a29da47 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js
@@ -21,7 +21,9 @@ const defaultCompareMediaQueries = (a, b) => a < b ? -1 : a > b ? 1 : 0;
 function createDOMRenderer(target = typeof document === 'undefined' ? undefined : document, options = {}) {
   const {
     unstable_filterCSSRule,
-    compareMediaQueries = defaultCompareMediaQueries
+    compareMediaQueries = defaultCompareMediaQueries,
+    constructableStylesheets = true,
+    styleTagTarget
   } = options;
   const renderer = {
     insertionCache: {},
@@ -36,7 +38,7 @@ function createDOMRenderer(target = typeof document === 'undefined' ? undefined
 
         for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {
           const [ruleCSS, metadata] = normalizeCSSBucketEntry.normalizeCSSBucketEntry(cssRulesForBucket[i]);
-          const sheet = getStyleSheetForBucket.getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes, metadata);
+          const sheet = getStyleSheetForBucket.getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes, metadata, constructableStylesheets, styleTagTarget);
 
           if (renderer.insertionCache[ruleCSS]) {
             continue;
diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js.map b/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js.map
index 5b1ca7f..1962cb7 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js.map
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"createDOMRenderer.cjs.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { normalizeCSSBucketEntry } from '../runtime/utils/normalizeCSSBucketEntry';\nimport { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n\n  /**\n   * @param a - media query\n   * @param b - media query\n   * @returns positive number if a > b or negative number if a < b\n   */\n  compareMediaQueries?: (a: string, b: string) => number;\n}\n\n/** @internal */\nexport const defaultCompareMediaQueries = (a: string, b: string) => (a < b ? -1 : a > b ? 1 : 0);\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const { unstable_filterCSSRule, compareMediaQueries = defaultCompareMediaQueries } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    stylesheets: {},\n    compareMediaQueries,\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      // eslint-disable-next-line guard-for-in\n      for (const styleBucketName in cssRules) {\n        const cssRulesForBucket = cssRules[styleBucketName as StyleBucketName]!;\n\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\n          const [ruleCSS, metadata] = normalizeCSSBucketEntry(cssRulesForBucket[i]);\n          const sheet = getStyleSheetForBucket(\n            styleBucketName as StyleBucketName,\n            target,\n            renderer,\n            options.styleElementAttributes,\n            metadata,\n          );\n\n          if (renderer.insertionCache[ruleCSS]) {\n            continue;\n          }\n\n          renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n            debugData.addCSSRule(ruleCSS);\n          }\n\n          try {\n            if (unstable_filterCSSRule) {\n              if (unstable_filterCSSRule(ruleCSS)) {\n                sheet.insertRule(ruleCSS);\n              }\n            } else {\n              sheet.insertRule(ruleCSS);\n            }\n          } catch (e) {\n            // We've disabled these warnings due to false-positive errors with browser prefixes\n            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\n              // eslint-disable-next-line no-console\n              console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\n            }\n          }\n        }\n      }\n    },\n  };\n\n  if (target && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(target);\n  }\n\n  return renderer;\n}\n\n/**\n * Suffixes to be ignored in case of error\n */\nconst ignoreSuffixes = [\n  '-moz-placeholder',\n  '-moz-focus-inner',\n  '-moz-focusring',\n  '-ms-input-placeholder',\n  '-moz-read-write',\n  '-moz-read-only',\n].join('|');\nconst ignoreSuffixesRegex = new RegExp(`:(${ignoreSuffixes})`);\n"],"names":["lastIndex","defaultCompareMediaQueries","a","b","createDOMRenderer","target","document","undefined","options","unstable_filterCSSRule","compareMediaQueries","renderer","insertionCache","stylesheets","id","insertCSSRules","cssRules","styleBucketName","cssRulesForBucket","i","l","length","ruleCSS","metadata","normalizeCSSBucketEntry","sheet","getStyleSheetForBucket","styleElementAttributes","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","insertRule","e","ignoreSuffixesRegex","test","console","error","injectDevTools","ignoreSuffixes","join","RegExp"],"mappings":";;;;;;;;;;AAKA,IAAIA,SAAS,GAAG,CAAhB;AA4BA;;MACaC,0BAA0B,GAAG,CAACC,CAAD,EAAYC,CAAZ,KAA2BD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAaD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY;AAE9F;;;;;;SAKgBC,kBACdC,SAA+B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,UAC7EE,UAAoC;EAEpC,MAAM;IAAEC,sBAAF;IAA0BC,mBAAmB,GAAGT;MAA+BO,OAArF;EACA,MAAMG,QAAQ,GAAoB;IAChCC,cAAc,EAAE,EADgB;IAEhCC,WAAW,EAAE,EAFmB;IAGhCH,mBAHgC;IAKhCI,EAAE,MAAMd,SAAS,IALe;;IAOhCe,cAAc,CAACC,QAAD;;MAEZ,KAAK,MAAMC,eAAX,IAA8BD,QAA9B,EAAwC;QACtC,MAAME,iBAAiB,GAAGF,QAAQ,CAACC,eAAD,CAAlC,CADsC;;QAItC,KAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,iBAAiB,CAACG,MAAtC,EAA8CF,CAAC,GAAGC,CAAlD,EAAqDD,CAAC,EAAtD,EAA0D;UACxD,MAAM,CAACG,OAAD,EAAUC,QAAV,IAAsBC,+CAAuB,CAACN,iBAAiB,CAACC,CAAD,CAAlB,CAAnD;UACA,MAAMM,KAAK,GAAGC,6CAAsB,CAClCT,eADkC,EAElCZ,MAFkC,EAGlCM,QAHkC,EAIlCH,OAAO,CAACmB,sBAJ0B,EAKlCJ,QALkC,CAApC;;UAQA,IAAIZ,QAAQ,CAACC,cAAT,CAAwBU,OAAxB,CAAJ,EAAsC;YACpC;;;UAGFX,QAAQ,CAACC,cAAT,CAAwBU,OAAxB,IAAmCL,eAAnC;;UACA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,mCAA7C,EAAgE;YAC9DC,eAAS,CAACC,UAAV,CAAqBX,OAArB;;;UAGF,IAAI;YACF,IAAIb,sBAAJ,EAA4B;cAC1B,IAAIA,sBAAsB,CAACa,OAAD,CAA1B,EAAqC;gBACnCG,KAAK,CAACS,UAAN,CAAiBZ,OAAjB;;aAFJ,MAIO;cACLG,KAAK,CAACS,UAAN,CAAiBZ,OAAjB;;WANJ,CAQE,OAAOa,CAAP,EAAU;;YAEV,IAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACM,mBAAmB,CAACC,IAApB,CAAyBf,OAAzB,CAA9C,EAAiF;;cAE/EgB,OAAO,CAACC,KAAR,uDAAoEjB,UAApE,EAAgFa,CAAhF;;;;;;;GA5CZ;;EAoDA,IAAI9B,MAAM,IAAIuB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAnC,IAAmDC,mCAAvD,EAA0E;IACxES,6BAAc,CAACnC,MAAD,CAAd;;;EAGF,OAAOM,QAAP;AACD;AAED;;;;AAGA,MAAM8B,cAAc,gBAAG,CACrB,kBADqB,EAErB,kBAFqB,EAGrB,gBAHqB,EAIrB,uBAJqB,EAKrB,iBALqB,EAMrB,gBANqB,EAOrBC,IAPqB,CAOhB,GAPgB,CAAvB;AAQA,MAAMN,mBAAmB,gBAAG,IAAIO,MAAJ,MAAgBF,iBAAhB,CAA5B;;;;;"}
\ No newline at end of file
+{"version":3,"file":"createDOMRenderer.cjs.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { normalizeCSSBucketEntry } from '../runtime/utils/normalizeCSSBucketEntry';\nimport { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n\n  /**\n   * @param a - media query\n   * @param b - media query\n   * @returns positive number if a > b or negative number if a < b\n   */\n  compareMediaQueries?: (a: string, b: string) => number;\n\n  constructableStylesheets?: boolean;\n\n  styleTagTarget?: HTMLElement | null;\n}\n\n/** @internal */\nexport const defaultCompareMediaQueries = (a: string, b: string) => (a < b ? -1 : a > b ? 1 : 0);\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const {\n    unstable_filterCSSRule,\n    compareMediaQueries = defaultCompareMediaQueries,\n    constructableStylesheets = true,\n    styleTagTarget,\n  } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    stylesheets: {},\n    compareMediaQueries,\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      // eslint-disable-next-line guard-for-in\n      for (const styleBucketName in cssRules) {\n        const cssRulesForBucket = cssRules[styleBucketName as StyleBucketName]!;\n\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\n          const [ruleCSS, metadata] = normalizeCSSBucketEntry(cssRulesForBucket[i]);\n          const sheet = getStyleSheetForBucket(\n            styleBucketName as StyleBucketName,\n            target,\n            renderer,\n            options.styleElementAttributes,\n            metadata,\n            constructableStylesheets,\n            styleTagTarget,\n          );\n\n          if (renderer.insertionCache[ruleCSS]) {\n            continue;\n          }\n\n          renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n            debugData.addCSSRule(ruleCSS);\n          }\n\n          try {\n            if (unstable_filterCSSRule) {\n              if (unstable_filterCSSRule(ruleCSS)) {\n                sheet.insertRule(ruleCSS);\n              }\n            } else {\n              sheet.insertRule(ruleCSS);\n            }\n          } catch (e) {\n            // We've disabled these warnings due to false-positive errors with browser prefixes\n            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\n              // eslint-disable-next-line no-console\n              console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\n            }\n          }\n        }\n      }\n    },\n  };\n\n  if (target && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(target);\n  }\n\n  return renderer;\n}\n\n/**\n * Suffixes to be ignored in case of error\n */\nconst ignoreSuffixes = [\n  '-moz-placeholder',\n  '-moz-focus-inner',\n  '-moz-focusring',\n  '-ms-input-placeholder',\n  '-moz-read-write',\n  '-moz-read-only',\n].join('|');\nconst ignoreSuffixesRegex = new RegExp(`:(${ignoreSuffixes})`);\n"],"names":["lastIndex","defaultCompareMediaQueries","a","b","createDOMRenderer","target","document","undefined","options","unstable_filterCSSRule","compareMediaQueries","constructableStylesheets","styleTagTarget","renderer","insertionCache","stylesheets","id","insertCSSRules","cssRules","styleBucketName","cssRulesForBucket","i","l","length","ruleCSS","metadata","normalizeCSSBucketEntry","sheet","getStyleSheetForBucket","styleElementAttributes","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","insertRule","e","ignoreSuffixesRegex","test","console","error","injectDevTools","ignoreSuffixes","join","RegExp"],"mappings":";;;;;;;;;;AAKA,IAAIA,SAAS,GAAG,CAAhB;AAgCA;;MACaC,0BAA0B,GAAG,CAACC,CAAD,EAAYC,CAAZ,KAA2BD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAaD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY;AAE9F;;;;;;SAKgBC,kBACdC,SAA+B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,UAC7EE,UAAoC;EAEpC,MAAM;IACJC,sBADI;IAEJC,mBAAmB,GAAGT,0BAFlB;IAGJU,wBAAwB,GAAG,IAHvB;IAIJC;MACEJ,OALJ;EAMA,MAAMK,QAAQ,GAAoB;IAChCC,cAAc,EAAE,EADgB;IAEhCC,WAAW,EAAE,EAFmB;IAGhCL,mBAHgC;IAKhCM,EAAE,MAAMhB,SAAS,IALe;;IAOhCiB,cAAc,CAACC,QAAD;;MAEZ,KAAK,MAAMC,eAAX,IAA8BD,QAA9B,EAAwC;QACtC,MAAME,iBAAiB,GAAGF,QAAQ,CAACC,eAAD,CAAlC,CADsC;;QAItC,KAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,iBAAiB,CAACG,MAAtC,EAA8CF,CAAC,GAAGC,CAAlD,EAAqDD,CAAC,EAAtD,EAA0D;UACxD,MAAM,CAACG,OAAD,EAAUC,QAAV,IAAsBC,+CAAuB,CAACN,iBAAiB,CAACC,CAAD,CAAlB,CAAnD;UACA,MAAMM,KAAK,GAAGC,6CAAsB,CAClCT,eADkC,EAElCd,MAFkC,EAGlCQ,QAHkC,EAIlCL,OAAO,CAACqB,sBAJ0B,EAKlCJ,QALkC,EAMlCd,wBANkC,EAOlCC,cAPkC,CAApC;;UAUA,IAAIC,QAAQ,CAACC,cAAT,CAAwBU,OAAxB,CAAJ,EAAsC;YACpC;;;UAGFX,QAAQ,CAACC,cAAT,CAAwBU,OAAxB,IAAmCL,eAAnC;;UACA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,mCAA7C,EAAgE;YAC9DC,eAAS,CAACC,UAAV,CAAqBX,OAArB;;;UAGF,IAAI;YACF,IAAIf,sBAAJ,EAA4B;cAC1B,IAAIA,sBAAsB,CAACe,OAAD,CAA1B,EAAqC;gBACnCG,KAAK,CAACS,UAAN,CAAiBZ,OAAjB;;aAFJ,MAIO;cACLG,KAAK,CAACS,UAAN,CAAiBZ,OAAjB;;WANJ,CAQE,OAAOa,CAAP,EAAU;;YAEV,IAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACM,mBAAmB,CAACC,IAApB,CAAyBf,OAAzB,CAA9C,EAAiF;;cAE/EgB,OAAO,CAACC,KAAR,uDAAoEjB,UAApE,EAAgFa,CAAhF;;;;;;;GA9CZ;;EAsDA,IAAIhC,MAAM,IAAIyB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAnC,IAAmDC,mCAAvD,EAA0E;IACxES,6BAAc,CAACrC,MAAD,CAAd;;;EAGF,OAAOQ,QAAP;AACD;AAED;;;;AAGA,MAAM8B,cAAc,gBAAG,CACrB,kBADqB,EAErB,kBAFqB,EAGrB,gBAHqB,EAIrB,uBAJqB,EAKrB,iBALqB,EAMrB,gBANqB,EAOrBC,IAPqB,CAOhB,GAPgB,CAAvB;AAQA,MAAMN,mBAAmB,gBAAG,IAAIO,MAAJ,MAAgBF,iBAAhB,CAA5B;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.d.ts b/node_modules/@griffel/core/renderer/createDOMRenderer.d.ts
index 6d735f7..cc2180e 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.d.ts
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.d.ts
@@ -21,6 +21,8 @@ export interface CreateDOMRendererOptions {
      * @returns positive number if a > b or negative number if a < b
      */
     compareMediaQueries?: (a: string, b: string) => number;
+    constructableStylesheets?: boolean;
+    styleTagTarget?: HTMLElement | null;
 }
 /** @internal */
 export declare const defaultCompareMediaQueries: (a: string, b: string) => 0 | 1 | -1;
diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js b/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js
index 04fa0cd..d69c306 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js
@@ -17,7 +17,9 @@ const defaultCompareMediaQueries = (a, b) => a < b ? -1 : a > b ? 1 : 0;
 function createDOMRenderer(target = typeof document === 'undefined' ? undefined : document, options = {}) {
   const {
     unstable_filterCSSRule,
-    compareMediaQueries = defaultCompareMediaQueries
+    compareMediaQueries = defaultCompareMediaQueries,
+    constructableStylesheets = true,
+    styleTagTarget
   } = options;
   const renderer = {
     insertionCache: {},
@@ -32,7 +34,7 @@ function createDOMRenderer(target = typeof document === 'undefined' ? undefined
 
         for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {
           const [ruleCSS, metadata] = normalizeCSSBucketEntry(cssRulesForBucket[i]);
-          const sheet = getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes, metadata);
+          const sheet = getStyleSheetForBucket(styleBucketName, target, renderer, options.styleElementAttributes, metadata, constructableStylesheets, styleTagTarget);
 
           if (renderer.insertionCache[ruleCSS]) {
             continue;
diff --git a/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js.map b/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js.map
index 4a0fbd7..564e69f 100644
--- a/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js.map
+++ b/node_modules/@griffel/core/renderer/createDOMRenderer.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"createDOMRenderer.esm.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { normalizeCSSBucketEntry } from '../runtime/utils/normalizeCSSBucketEntry';\nimport { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n\n  /**\n   * @param a - media query\n   * @param b - media query\n   * @returns positive number if a > b or negative number if a < b\n   */\n  compareMediaQueries?: (a: string, b: string) => number;\n}\n\n/** @internal */\nexport const defaultCompareMediaQueries = (a: string, b: string) => (a < b ? -1 : a > b ? 1 : 0);\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const { unstable_filterCSSRule, compareMediaQueries = defaultCompareMediaQueries } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    stylesheets: {},\n    compareMediaQueries,\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      // eslint-disable-next-line guard-for-in\n      for (const styleBucketName in cssRules) {\n        const cssRulesForBucket = cssRules[styleBucketName as StyleBucketName]!;\n\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\n          const [ruleCSS, metadata] = normalizeCSSBucketEntry(cssRulesForBucket[i]);\n          const sheet = getStyleSheetForBucket(\n            styleBucketName as StyleBucketName,\n            target,\n            renderer,\n            options.styleElementAttributes,\n            metadata,\n          );\n\n          if (renderer.insertionCache[ruleCSS]) {\n            continue;\n          }\n\n          renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n            debugData.addCSSRule(ruleCSS);\n          }\n\n          try {\n            if (unstable_filterCSSRule) {\n              if (unstable_filterCSSRule(ruleCSS)) {\n                sheet.insertRule(ruleCSS);\n              }\n            } else {\n              sheet.insertRule(ruleCSS);\n            }\n          } catch (e) {\n            // We've disabled these warnings due to false-positive errors with browser prefixes\n            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\n              // eslint-disable-next-line no-console\n              console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\n            }\n          }\n        }\n      }\n    },\n  };\n\n  if (target && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(target);\n  }\n\n  return renderer;\n}\n\n/**\n * Suffixes to be ignored in case of error\n */\nconst ignoreSuffixes = [\n  '-moz-placeholder',\n  '-moz-focus-inner',\n  '-moz-focusring',\n  '-ms-input-placeholder',\n  '-moz-read-write',\n  '-moz-read-only',\n].join('|');\nconst ignoreSuffixesRegex = new RegExp(`:(${ignoreSuffixes})`);\n"],"names":["lastIndex","defaultCompareMediaQueries","a","b","createDOMRenderer","target","document","undefined","options","unstable_filterCSSRule","compareMediaQueries","renderer","insertionCache","stylesheets","id","insertCSSRules","cssRules","styleBucketName","cssRulesForBucket","i","l","length","ruleCSS","metadata","normalizeCSSBucketEntry","sheet","getStyleSheetForBucket","styleElementAttributes","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","insertRule","e","ignoreSuffixesRegex","test","console","error","injectDevTools","ignoreSuffixes","join","RegExp"],"mappings":";;;;;;AAKA,IAAIA,SAAS,GAAG,CAAhB;AA4BA;;MACaC,0BAA0B,GAAG,CAACC,CAAD,EAAYC,CAAZ,KAA2BD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAaD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY;AAE9F;;;;;;SAKgBC,kBACdC,SAA+B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,UAC7EE,UAAoC;EAEpC,MAAM;IAAEC,sBAAF;IAA0BC,mBAAmB,GAAGT;MAA+BO,OAArF;EACA,MAAMG,QAAQ,GAAoB;IAChCC,cAAc,EAAE,EADgB;IAEhCC,WAAW,EAAE,EAFmB;IAGhCH,mBAHgC;IAKhCI,EAAE,MAAMd,SAAS,IALe;;IAOhCe,cAAc,CAACC,QAAD;;MAEZ,KAAK,MAAMC,eAAX,IAA8BD,QAA9B,EAAwC;QACtC,MAAME,iBAAiB,GAAGF,QAAQ,CAACC,eAAD,CAAlC,CADsC;;QAItC,KAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,iBAAiB,CAACG,MAAtC,EAA8CF,CAAC,GAAGC,CAAlD,EAAqDD,CAAC,EAAtD,EAA0D;UACxD,MAAM,CAACG,OAAD,EAAUC,QAAV,IAAsBC,uBAAuB,CAACN,iBAAiB,CAACC,CAAD,CAAlB,CAAnD;UACA,MAAMM,KAAK,GAAGC,sBAAsB,CAClCT,eADkC,EAElCZ,MAFkC,EAGlCM,QAHkC,EAIlCH,OAAO,CAACmB,sBAJ0B,EAKlCJ,QALkC,CAApC;;UAQA,IAAIZ,QAAQ,CAACC,cAAT,CAAwBU,OAAxB,CAAJ,EAAsC;YACpC;;;UAGFX,QAAQ,CAACC,cAAT,CAAwBU,OAAxB,IAAmCL,eAAnC;;UACA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,iBAA7C,EAAgE;YAC9DC,SAAS,CAACC,UAAV,CAAqBX,OAArB;;;UAGF,IAAI;YACF,IAAIb,sBAAJ,EAA4B;cAC1B,IAAIA,sBAAsB,CAACa,OAAD,CAA1B,EAAqC;gBACnCG,KAAK,CAACS,UAAN,CAAiBZ,OAAjB;;aAFJ,MAIO;cACLG,KAAK,CAACS,UAAN,CAAiBZ,OAAjB;;WANJ,CAQE,OAAOa,CAAP,EAAU;;YAEV,IAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACM,mBAAmB,CAACC,IAApB,CAAyBf,OAAzB,CAA9C,EAAiF;;cAE/EgB,OAAO,CAACC,KAAR,uDAAoEjB,UAApE,EAAgFa,CAAhF;;;;;;;GA5CZ;;EAoDA,IAAI9B,MAAM,IAAIuB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAnC,IAAmDC,iBAAvD,EAA0E;IACxES,cAAc,CAACnC,MAAD,CAAd;;;EAGF,OAAOM,QAAP;AACD;AAED;;;;AAGA,MAAM8B,cAAc,gBAAG,CACrB,kBADqB,EAErB,kBAFqB,EAGrB,gBAHqB,EAIrB,uBAJqB,EAKrB,iBALqB,EAMrB,gBANqB,EAOrBC,IAPqB,CAOhB,GAPgB,CAAvB;AAQA,MAAMN,mBAAmB,gBAAG,IAAIO,MAAJ,MAAgBF,iBAAhB,CAA5B;;;;"}
\ No newline at end of file
+{"version":3,"file":"createDOMRenderer.esm.js","sources":["../../../../packages/core/src/renderer/createDOMRenderer.ts"],"sourcesContent":["import { injectDevTools, isDevToolsEnabled, debugData } from '../devtools';\nimport { normalizeCSSBucketEntry } from '../runtime/utils/normalizeCSSBucketEntry';\nimport { GriffelRenderer, StyleBucketName } from '../types';\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket';\n\nlet lastIndex = 0;\n\nexport interface CreateDOMRendererOptions {\n  /**\n   * A map of attributes that's passed to the generated style elements. Is useful to set \"nonce\" attribute.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/nonce\n   */\n  styleElementAttributes?: Record<string, string>;\n\n  /**\n   * A filter run before CSS rule insertion to systematically remove CSS rules at render time.\n   * This can be used to forbid specific rules from being written to the style sheet at run time without\n   * affecting build time styles.\n   *\n   * ⚠️ Keep the filter as performant as possible to avoid negative performance impacts to your application.\n   * ⚠️ This API is unstable and can be removed from the library at any time.\n   */\n  unstable_filterCSSRule?: (cssRule: string) => boolean;\n\n  /**\n   * @param a - media query\n   * @param b - media query\n   * @returns positive number if a > b or negative number if a < b\n   */\n  compareMediaQueries?: (a: string, b: string) => number;\n\n  constructableStylesheets?: boolean;\n\n  styleTagTarget?: HTMLElement | null;\n}\n\n/** @internal */\nexport const defaultCompareMediaQueries = (a: string, b: string) => (a < b ? -1 : a > b ? 1 : 0);\n\n/**\n * Creates a new instances of a renderer.\n *\n * @public\n */\nexport function createDOMRenderer(\n  target: Document | undefined = typeof document === 'undefined' ? undefined : document,\n  options: CreateDOMRendererOptions = {},\n): GriffelRenderer {\n  const {\n    unstable_filterCSSRule,\n    compareMediaQueries = defaultCompareMediaQueries,\n    constructableStylesheets = true,\n    styleTagTarget,\n  } = options;\n  const renderer: GriffelRenderer = {\n    insertionCache: {},\n    stylesheets: {},\n    compareMediaQueries,\n\n    id: `d${lastIndex++}`,\n\n    insertCSSRules(cssRules) {\n      // eslint-disable-next-line guard-for-in\n      for (const styleBucketName in cssRules) {\n        const cssRulesForBucket = cssRules[styleBucketName as StyleBucketName]!;\n\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\n          const [ruleCSS, metadata] = normalizeCSSBucketEntry(cssRulesForBucket[i]);\n          const sheet = getStyleSheetForBucket(\n            styleBucketName as StyleBucketName,\n            target,\n            renderer,\n            options.styleElementAttributes,\n            metadata,\n            constructableStylesheets,\n            styleTagTarget,\n          );\n\n          if (renderer.insertionCache[ruleCSS]) {\n            continue;\n          }\n\n          renderer.insertionCache[ruleCSS] = styleBucketName as StyleBucketName;\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n            debugData.addCSSRule(ruleCSS);\n          }\n\n          try {\n            if (unstable_filterCSSRule) {\n              if (unstable_filterCSSRule(ruleCSS)) {\n                sheet.insertRule(ruleCSS);\n              }\n            } else {\n              sheet.insertRule(ruleCSS);\n            }\n          } catch (e) {\n            // We've disabled these warnings due to false-positive errors with browser prefixes\n            if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\n              // eslint-disable-next-line no-console\n              console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\n            }\n          }\n        }\n      }\n    },\n  };\n\n  if (target && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\n    injectDevTools(target);\n  }\n\n  return renderer;\n}\n\n/**\n * Suffixes to be ignored in case of error\n */\nconst ignoreSuffixes = [\n  '-moz-placeholder',\n  '-moz-focus-inner',\n  '-moz-focusring',\n  '-ms-input-placeholder',\n  '-moz-read-write',\n  '-moz-read-only',\n].join('|');\nconst ignoreSuffixesRegex = new RegExp(`:(${ignoreSuffixes})`);\n"],"names":["lastIndex","defaultCompareMediaQueries","a","b","createDOMRenderer","target","document","undefined","options","unstable_filterCSSRule","compareMediaQueries","constructableStylesheets","styleTagTarget","renderer","insertionCache","stylesheets","id","insertCSSRules","cssRules","styleBucketName","cssRulesForBucket","i","l","length","ruleCSS","metadata","normalizeCSSBucketEntry","sheet","getStyleSheetForBucket","styleElementAttributes","process","env","NODE_ENV","isDevToolsEnabled","debugData","addCSSRule","insertRule","e","ignoreSuffixesRegex","test","console","error","injectDevTools","ignoreSuffixes","join","RegExp"],"mappings":";;;;;;AAKA,IAAIA,SAAS,GAAG,CAAhB;AAgCA;;MACaC,0BAA0B,GAAG,CAACC,CAAD,EAAYC,CAAZ,KAA2BD,CAAC,GAAGC,CAAJ,GAAQ,CAAC,CAAT,GAAaD,CAAC,GAAGC,CAAJ,GAAQ,CAAR,GAAY;AAE9F;;;;;;SAKgBC,kBACdC,SAA+B,OAAOC,QAAP,KAAoB,WAApB,GAAkCC,SAAlC,GAA8CD,UAC7EE,UAAoC;EAEpC,MAAM;IACJC,sBADI;IAEJC,mBAAmB,GAAGT,0BAFlB;IAGJU,wBAAwB,GAAG,IAHvB;IAIJC;MACEJ,OALJ;EAMA,MAAMK,QAAQ,GAAoB;IAChCC,cAAc,EAAE,EADgB;IAEhCC,WAAW,EAAE,EAFmB;IAGhCL,mBAHgC;IAKhCM,EAAE,MAAMhB,SAAS,IALe;;IAOhCiB,cAAc,CAACC,QAAD;;MAEZ,KAAK,MAAMC,eAAX,IAA8BD,QAA9B,EAAwC;QACtC,MAAME,iBAAiB,GAAGF,QAAQ,CAACC,eAAD,CAAlC,CADsC;;QAItC,KAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,iBAAiB,CAACG,MAAtC,EAA8CF,CAAC,GAAGC,CAAlD,EAAqDD,CAAC,EAAtD,EAA0D;UACxD,MAAM,CAACG,OAAD,EAAUC,QAAV,IAAsBC,uBAAuB,CAACN,iBAAiB,CAACC,CAAD,CAAlB,CAAnD;UACA,MAAMM,KAAK,GAAGC,sBAAsB,CAClCT,eADkC,EAElCd,MAFkC,EAGlCQ,QAHkC,EAIlCL,OAAO,CAACqB,sBAJ0B,EAKlCJ,QALkC,EAMlCd,wBANkC,EAOlCC,cAPkC,CAApC;;UAUA,IAAIC,QAAQ,CAACC,cAAT,CAAwBU,OAAxB,CAAJ,EAAsC;YACpC;;;UAGFX,QAAQ,CAACC,cAAT,CAAwBU,OAAxB,IAAmCL,eAAnC;;UACA,IAAIW,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,iBAA7C,EAAgE;YAC9DC,SAAS,CAACC,UAAV,CAAqBX,OAArB;;;UAGF,IAAI;YACF,IAAIf,sBAAJ,EAA4B;cAC1B,IAAIA,sBAAsB,CAACe,OAAD,CAA1B,EAAqC;gBACnCG,KAAK,CAACS,UAAN,CAAiBZ,OAAjB;;aAFJ,MAIO;cACLG,KAAK,CAACS,UAAN,CAAiBZ,OAAjB;;WANJ,CAQE,OAAOa,CAAP,EAAU;;YAEV,IAAIP,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyC,CAACM,mBAAmB,CAACC,IAApB,CAAyBf,OAAzB,CAA9C,EAAiF;;cAE/EgB,OAAO,CAACC,KAAR,uDAAoEjB,UAApE,EAAgFa,CAAhF;;;;;;;GA9CZ;;EAsDA,IAAIhC,MAAM,IAAIyB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAnC,IAAmDC,iBAAvD,EAA0E;IACxES,cAAc,CAACrC,MAAD,CAAd;;;EAGF,OAAOQ,QAAP;AACD;AAED;;;;AAGA,MAAM8B,cAAc,gBAAG,CACrB,kBADqB,EAErB,kBAFqB,EAGrB,gBAHqB,EAIrB,uBAJqB,EAKrB,iBALqB,EAMrB,gBANqB,EAOrBC,IAPqB,CAOhB,GAPgB,CAAvB;AAQA,MAAMN,mBAAmB,gBAAG,IAAIO,MAAJ,MAAgBF,iBAAhB,CAA5B;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.cjs.js b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.cjs.js
index accbd03..3384490 100644
--- a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.cjs.js
+++ b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.cjs.js
@@ -4,7 +4,7 @@ Object.defineProperty(exports, '__esModule', { value: true });
 
 var constants = require('../constants.cjs.js');
 
-function createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes) {
+function createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes, constructableStylesheets) {
   // no CSSStyleSheet in SSR, just append rules here for server render
   const __cssRulesForSSR = [];
   elementAttributes[constants.DATA_BUCKET_ATTR] = bucketName;
@@ -15,8 +15,25 @@ function createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes)
     }
   }
 
+  let sheet;
+
   function insertRule(rule) {
-    if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {
+    if (constructableStylesheets) {
+      if (!sheet) {
+        sheet = new CSSStyleSheet(); // @ts-expect-error
+
+        sheet.replaceSync(rule); // @ts-expect-error
+
+        document.adoptedStyleSheets = [...document.adoptedStyleSheets, sheet]; // if (!window.__adoptedStylesheets__) {
+        //   window.__adoptedStylesheets__ = [];
+        // }
+        // window.__adoptedStylesheets__.push(sheet);
+      } else {
+        sheet.insertRule(rule, sheet.cssRules.length);
+      }
+
+      return sheet.cssRules.length;
+    } else if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {
       return styleElement.sheet.insertRule(rule, styleElement.sheet.cssRules.length);
     }
 
@@ -30,7 +47,9 @@ function createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes)
     bucketName,
 
     cssRules() {
-      if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {
+      if (constructableStylesheets) {
+        return Array.from(sheet.cssRules).map(cssRule => cssRule.cssText);
+      } else if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {
         return Array.from(styleElement.sheet.cssRules).map(cssRule => cssRule.cssText);
       }
 
@@ -44,7 +63,7 @@ function createIsomorphicStyleSheetFromElement(element) {
     acc[attr.name] = attr.value;
     return acc;
   }, {});
-  const stylesheet = createIsomorphicStyleSheet(element, elementAttributes[constants.DATA_BUCKET_ATTR], elementAttributes);
+  const stylesheet = createIsomorphicStyleSheet(element, elementAttributes[constants.DATA_BUCKET_ATTR], elementAttributes, false);
   return stylesheet;
 }
 
diff --git a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.cjs.js.map b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.cjs.js.map
index 99fd72c..3625ff4 100644
--- a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.cjs.js.map
+++ b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"createIsomorphicStyleSheet.cjs.js","sources":["../../../../packages/core/src/renderer/createIsomorphicStyleSheet.ts"],"sourcesContent":["import { DATA_BUCKET_ATTR } from '../constants';\nimport { IsomorphicStyleSheet, StyleBucketName } from '../types';\n\nexport function createIsomorphicStyleSheet(\n  styleElement: HTMLStyleElement | undefined,\n  bucketName: StyleBucketName,\n  elementAttributes: Record<string, string>,\n): IsomorphicStyleSheet {\n  // no CSSStyleSheet in SSR, just append rules here for server render\n  const __cssRulesForSSR: string[] = [];\n\n  elementAttributes[DATA_BUCKET_ATTR] = bucketName;\n  if (styleElement) {\n    for (const attrName in elementAttributes) {\n      styleElement.setAttribute(attrName, elementAttributes[attrName]);\n    }\n  }\n\n  function insertRule(rule: string) {\n    if (styleElement?.sheet) {\n      return styleElement.sheet.insertRule(rule, styleElement.sheet.cssRules.length);\n    }\n\n    return __cssRulesForSSR.push(rule);\n  }\n\n  return {\n    elementAttributes,\n    insertRule,\n    element: styleElement,\n    bucketName,\n    cssRules() {\n      if (styleElement?.sheet) {\n        return Array.from(styleElement.sheet.cssRules).map(cssRule => cssRule.cssText);\n      }\n\n      return __cssRulesForSSR;\n    },\n  };\n}\n\nexport function createIsomorphicStyleSheetFromElement(element: HTMLStyleElement) {\n  const elementAttributes = Array.from(element.attributes).reduce((acc, attr) => {\n    acc[attr.name] = attr.value;\n    return acc;\n  }, {} as Record<string, string>);\n  const stylesheet = createIsomorphicStyleSheet(\n    element,\n    elementAttributes[DATA_BUCKET_ATTR] as StyleBucketName,\n    elementAttributes,\n  );\n  return stylesheet;\n}\n"],"names":["createIsomorphicStyleSheet","styleElement","bucketName","elementAttributes","__cssRulesForSSR","DATA_BUCKET_ATTR","attrName","setAttribute","insertRule","rule","sheet","cssRules","length","push","element","Array","from","map","cssRule","cssText","createIsomorphicStyleSheetFromElement","attributes","reduce","acc","attr","name","value","stylesheet"],"mappings":";;;;;;SAGgBA,2BACdC,cACAC,YACAC;;EAGA,MAAMC,gBAAgB,GAAa,EAAnC;EAEAD,iBAAiB,CAACE,0BAAD,CAAjB,GAAsCH,UAAtC;;EACA,IAAID,YAAJ,EAAkB;IAChB,KAAK,MAAMK,QAAX,IAAuBH,iBAAvB,EAA0C;MACxCF,YAAY,CAACM,YAAb,CAA0BD,QAA1B,EAAoCH,iBAAiB,CAACG,QAAD,CAArD;;;;EAIJ,SAASE,UAAT,CAAoBC,IAApB;IACE,IAAIR,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAES,KAAlB,EAAyB;MACvB,OAAOT,YAAY,CAACS,KAAb,CAAmBF,UAAnB,CAA8BC,IAA9B,EAAoCR,YAAY,CAACS,KAAb,CAAmBC,QAAnB,CAA4BC,MAAhE,CAAP;;;IAGF,OAAOR,gBAAgB,CAACS,IAAjB,CAAsBJ,IAAtB,CAAP;;;EAGF,OAAO;IACLN,iBADK;IAELK,UAFK;IAGLM,OAAO,EAAEb,YAHJ;IAILC,UAJK;;IAKLS,QAAQ;MACN,IAAIV,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAES,KAAlB,EAAyB;QACvB,OAAOK,KAAK,CAACC,IAAN,CAAWf,YAAY,CAACS,KAAb,CAAmBC,QAA9B,EAAwCM,GAAxC,CAA4CC,OAAO,IAAIA,OAAO,CAACC,OAA/D,CAAP;;;MAGF,OAAOf,gBAAP;;;GAVJ;AAaD;SAEegB,sCAAsCN;EACpD,MAAMX,iBAAiB,GAAGY,KAAK,CAACC,IAAN,CAAWF,OAAO,CAACO,UAAnB,EAA+BC,MAA/B,CAAsC,CAACC,GAAD,EAAMC,IAAN;IAC9DD,GAAG,CAACC,IAAI,CAACC,IAAN,CAAH,GAAiBD,IAAI,CAACE,KAAtB;IACA,OAAOH,GAAP;GAFwB,EAGvB,EAHuB,CAA1B;EAIA,MAAMI,UAAU,GAAG3B,0BAA0B,CAC3Cc,OAD2C,EAE3CX,iBAAiB,CAACE,0BAAD,CAF0B,EAG3CF,iBAH2C,CAA7C;EAKA,OAAOwB,UAAP;AACD;;;;;"}
\ No newline at end of file
+{"version":3,"file":"createIsomorphicStyleSheet.cjs.js","sources":["../../../../packages/core/src/renderer/createIsomorphicStyleSheet.ts"],"sourcesContent":["import { DATA_BUCKET_ATTR } from '../constants';\nimport { IsomorphicStyleSheet, StyleBucketName } from '../types';\n\ndeclare global {\n  interface Window {\n    __adoptedStylesheets__: CSSStyleSheet[]\n  }\n};\n\nexport function createIsomorphicStyleSheet(\n  styleElement: HTMLStyleElement | undefined,\n  bucketName: StyleBucketName,\n  elementAttributes: Record<string, string>,\n  constructableStylesheets: boolean,\n): IsomorphicStyleSheet {\n  // no CSSStyleSheet in SSR, just append rules here for server render\n  const __cssRulesForSSR: string[] = [];\n\n  elementAttributes[DATA_BUCKET_ATTR] = bucketName;\n  if (styleElement) {\n    for (const attrName in elementAttributes) {\n      styleElement.setAttribute(attrName, elementAttributes[attrName]);\n    }\n  }\n\n  let sheet: CSSStyleSheet;\n  function insertRule(rule: string) {\n    if (constructableStylesheets) {\n      if (!sheet) {\n        sheet = new CSSStyleSheet();\n        // @ts-expect-error\n        sheet.replaceSync(rule);\n        // @ts-expect-error\n        document.adoptedStyleSheets = [...document.adoptedStyleSheets, sheet];\n        // if (!window.__adoptedStylesheets__) {\n        //   window.__adoptedStylesheets__ = [];\n        // }\n        // window.__adoptedStylesheets__.push(sheet);\n      } else {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      }\n      return sheet.cssRules.length;\n    } else if (styleElement?.sheet) {\n      return styleElement.sheet.insertRule(rule, styleElement.sheet.cssRules.length);\n    }\n\n    return __cssRulesForSSR.push(rule);\n  }\n\n  return {\n    elementAttributes,\n    insertRule,\n    element: styleElement,\n    bucketName,\n    cssRules() {\n      if (constructableStylesheets) {\n        return Array.from(sheet.cssRules).map(cssRule => cssRule.cssText);\n      } else if (styleElement?.sheet) {\n        return Array.from(styleElement.sheet.cssRules).map(cssRule => cssRule.cssText);\n      }\n\n      return __cssRulesForSSR;\n    },\n  };\n}\n\nexport function createIsomorphicStyleSheetFromElement(element: HTMLStyleElement) {\n  const elementAttributes = Array.from(element.attributes).reduce((acc, attr) => {\n    acc[attr.name] = attr.value;\n    return acc;\n  }, {} as Record<string, string>);\n  const stylesheet = createIsomorphicStyleSheet(\n    element,\n    elementAttributes[DATA_BUCKET_ATTR] as StyleBucketName,\n    elementAttributes,\n    false,\n  );\n  return stylesheet;\n}\n"],"names":["createIsomorphicStyleSheet","styleElement","bucketName","elementAttributes","constructableStylesheets","__cssRulesForSSR","DATA_BUCKET_ATTR","attrName","setAttribute","sheet","insertRule","rule","CSSStyleSheet","replaceSync","document","adoptedStyleSheets","cssRules","length","push","element","Array","from","map","cssRule","cssText","createIsomorphicStyleSheetFromElement","attributes","reduce","acc","attr","name","value","stylesheet"],"mappings":";;;;;;SASgBA,2BACdC,cACAC,YACAC,mBACAC;;EAGA,MAAMC,gBAAgB,GAAa,EAAnC;EAEAF,iBAAiB,CAACG,0BAAD,CAAjB,GAAsCJ,UAAtC;;EACA,IAAID,YAAJ,EAAkB;IAChB,KAAK,MAAMM,QAAX,IAAuBJ,iBAAvB,EAA0C;MACxCF,YAAY,CAACO,YAAb,CAA0BD,QAA1B,EAAoCJ,iBAAiB,CAACI,QAAD,CAArD;;;;EAIJ,IAAIE,KAAJ;;EACA,SAASC,UAAT,CAAoBC,IAApB;IACE,IAAIP,wBAAJ,EAA8B;MAC5B,IAAI,CAACK,KAAL,EAAY;QACVA,KAAK,GAAG,IAAIG,aAAJ,EAAR,CADU;;QAGVH,KAAK,CAACI,WAAN,CAAkBF,IAAlB,EAHU;;QAKVG,QAAQ,CAACC,kBAAT,GAA8B,CAAC,GAAGD,QAAQ,CAACC,kBAAb,EAAiCN,KAAjC,CAA9B,CALU;;;;OAAZ,MAUO;QACLA,KAAK,CAACC,UAAN,CAAiBC,IAAjB,EAAuBF,KAAK,CAACO,QAAN,CAAeC,MAAtC;;;MAEF,OAAOR,KAAK,CAACO,QAAN,CAAeC,MAAtB;KAdF,MAeO,IAAIhB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAEQ,KAAlB,EAAyB;MAC9B,OAAOR,YAAY,CAACQ,KAAb,CAAmBC,UAAnB,CAA8BC,IAA9B,EAAoCV,YAAY,CAACQ,KAAb,CAAmBO,QAAnB,CAA4BC,MAAhE,CAAP;;;IAGF,OAAOZ,gBAAgB,CAACa,IAAjB,CAAsBP,IAAtB,CAAP;;;EAGF,OAAO;IACLR,iBADK;IAELO,UAFK;IAGLS,OAAO,EAAElB,YAHJ;IAILC,UAJK;;IAKLc,QAAQ;MACN,IAAIZ,wBAAJ,EAA8B;QAC5B,OAAOgB,KAAK,CAACC,IAAN,CAAWZ,KAAK,CAACO,QAAjB,EAA2BM,GAA3B,CAA+BC,OAAO,IAAIA,OAAO,CAACC,OAAlD,CAAP;OADF,MAEO,IAAIvB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAEQ,KAAlB,EAAyB;QAC9B,OAAOW,KAAK,CAACC,IAAN,CAAWpB,YAAY,CAACQ,KAAb,CAAmBO,QAA9B,EAAwCM,GAAxC,CAA4CC,OAAO,IAAIA,OAAO,CAACC,OAA/D,CAAP;;;MAGF,OAAOnB,gBAAP;;;GAZJ;AAeD;SAEeoB,sCAAsCN;EACpD,MAAMhB,iBAAiB,GAAGiB,KAAK,CAACC,IAAN,CAAWF,OAAO,CAACO,UAAnB,EAA+BC,MAA/B,CAAsC,CAACC,GAAD,EAAMC,IAAN;IAC9DD,GAAG,CAACC,IAAI,CAACC,IAAN,CAAH,GAAiBD,IAAI,CAACE,KAAtB;IACA,OAAOH,GAAP;GAFwB,EAGvB,EAHuB,CAA1B;EAIA,MAAMI,UAAU,GAAGhC,0BAA0B,CAC3CmB,OAD2C,EAE3ChB,iBAAiB,CAACG,0BAAD,CAF0B,EAG3CH,iBAH2C,EAI3C,KAJ2C,CAA7C;EAMA,OAAO6B,UAAP;AACD;;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.d.ts b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.d.ts
index 7b62e82..277ac24 100644
--- a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.d.ts
+++ b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.d.ts
@@ -1,3 +1,8 @@
 import { IsomorphicStyleSheet, StyleBucketName } from '../types';
-export declare function createIsomorphicStyleSheet(styleElement: HTMLStyleElement | undefined, bucketName: StyleBucketName, elementAttributes: Record<string, string>): IsomorphicStyleSheet;
+declare global {
+    interface Window {
+        __adoptedStylesheets__: CSSStyleSheet[];
+    }
+}
+export declare function createIsomorphicStyleSheet(styleElement: HTMLStyleElement | undefined, bucketName: StyleBucketName, elementAttributes: Record<string, string>, constructableStylesheets: boolean): IsomorphicStyleSheet;
 export declare function createIsomorphicStyleSheetFromElement(element: HTMLStyleElement): IsomorphicStyleSheet;
diff --git a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js
index 55a35c7..bc2a309 100644
--- a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js
+++ b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js
@@ -1,6 +1,6 @@
 import { DATA_BUCKET_ATTR } from '../constants.esm.js';
 
-function createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes) {
+function createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes, constructableStylesheets) {
   // no CSSStyleSheet in SSR, just append rules here for server render
   const __cssRulesForSSR = [];
   elementAttributes[DATA_BUCKET_ATTR] = bucketName;
@@ -11,8 +11,25 @@ function createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes)
     }
   }
 
+  let sheet;
+
   function insertRule(rule) {
-    if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {
+    if (constructableStylesheets) {
+      if (!sheet) {
+        sheet = new CSSStyleSheet(); // @ts-expect-error
+
+        sheet.replaceSync(rule); // @ts-expect-error
+
+        document.adoptedStyleSheets = [...document.adoptedStyleSheets, sheet]; // if (!window.__adoptedStylesheets__) {
+        //   window.__adoptedStylesheets__ = [];
+        // }
+        // window.__adoptedStylesheets__.push(sheet);
+      } else {
+        sheet.insertRule(rule, sheet.cssRules.length);
+      }
+
+      return sheet.cssRules.length;
+    } else if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {
       return styleElement.sheet.insertRule(rule, styleElement.sheet.cssRules.length);
     }
 
@@ -26,7 +43,9 @@ function createIsomorphicStyleSheet(styleElement, bucketName, elementAttributes)
     bucketName,
 
     cssRules() {
-      if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {
+      if (constructableStylesheets) {
+        return Array.from(sheet.cssRules).map(cssRule => cssRule.cssText);
+      } else if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {
         return Array.from(styleElement.sheet.cssRules).map(cssRule => cssRule.cssText);
       }
 
@@ -40,7 +59,7 @@ function createIsomorphicStyleSheetFromElement(element) {
     acc[attr.name] = attr.value;
     return acc;
   }, {});
-  const stylesheet = createIsomorphicStyleSheet(element, elementAttributes[DATA_BUCKET_ATTR], elementAttributes);
+  const stylesheet = createIsomorphicStyleSheet(element, elementAttributes[DATA_BUCKET_ATTR], elementAttributes, false);
   return stylesheet;
 }
 
diff --git a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js.map b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js.map
index 724d654..24d8aef 100644
--- a/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js.map
+++ b/node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"createIsomorphicStyleSheet.esm.js","sources":["../../../../packages/core/src/renderer/createIsomorphicStyleSheet.ts"],"sourcesContent":["import { DATA_BUCKET_ATTR } from '../constants';\nimport { IsomorphicStyleSheet, StyleBucketName } from '../types';\n\nexport function createIsomorphicStyleSheet(\n  styleElement: HTMLStyleElement | undefined,\n  bucketName: StyleBucketName,\n  elementAttributes: Record<string, string>,\n): IsomorphicStyleSheet {\n  // no CSSStyleSheet in SSR, just append rules here for server render\n  const __cssRulesForSSR: string[] = [];\n\n  elementAttributes[DATA_BUCKET_ATTR] = bucketName;\n  if (styleElement) {\n    for (const attrName in elementAttributes) {\n      styleElement.setAttribute(attrName, elementAttributes[attrName]);\n    }\n  }\n\n  function insertRule(rule: string) {\n    if (styleElement?.sheet) {\n      return styleElement.sheet.insertRule(rule, styleElement.sheet.cssRules.length);\n    }\n\n    return __cssRulesForSSR.push(rule);\n  }\n\n  return {\n    elementAttributes,\n    insertRule,\n    element: styleElement,\n    bucketName,\n    cssRules() {\n      if (styleElement?.sheet) {\n        return Array.from(styleElement.sheet.cssRules).map(cssRule => cssRule.cssText);\n      }\n\n      return __cssRulesForSSR;\n    },\n  };\n}\n\nexport function createIsomorphicStyleSheetFromElement(element: HTMLStyleElement) {\n  const elementAttributes = Array.from(element.attributes).reduce((acc, attr) => {\n    acc[attr.name] = attr.value;\n    return acc;\n  }, {} as Record<string, string>);\n  const stylesheet = createIsomorphicStyleSheet(\n    element,\n    elementAttributes[DATA_BUCKET_ATTR] as StyleBucketName,\n    elementAttributes,\n  );\n  return stylesheet;\n}\n"],"names":["createIsomorphicStyleSheet","styleElement","bucketName","elementAttributes","__cssRulesForSSR","DATA_BUCKET_ATTR","attrName","setAttribute","insertRule","rule","sheet","cssRules","length","push","element","Array","from","map","cssRule","cssText","createIsomorphicStyleSheetFromElement","attributes","reduce","acc","attr","name","value","stylesheet"],"mappings":";;SAGgBA,2BACdC,cACAC,YACAC;;EAGA,MAAMC,gBAAgB,GAAa,EAAnC;EAEAD,iBAAiB,CAACE,gBAAD,CAAjB,GAAsCH,UAAtC;;EACA,IAAID,YAAJ,EAAkB;IAChB,KAAK,MAAMK,QAAX,IAAuBH,iBAAvB,EAA0C;MACxCF,YAAY,CAACM,YAAb,CAA0BD,QAA1B,EAAoCH,iBAAiB,CAACG,QAAD,CAArD;;;;EAIJ,SAASE,UAAT,CAAoBC,IAApB;IACE,IAAIR,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAES,KAAlB,EAAyB;MACvB,OAAOT,YAAY,CAACS,KAAb,CAAmBF,UAAnB,CAA8BC,IAA9B,EAAoCR,YAAY,CAACS,KAAb,CAAmBC,QAAnB,CAA4BC,MAAhE,CAAP;;;IAGF,OAAOR,gBAAgB,CAACS,IAAjB,CAAsBJ,IAAtB,CAAP;;;EAGF,OAAO;IACLN,iBADK;IAELK,UAFK;IAGLM,OAAO,EAAEb,YAHJ;IAILC,UAJK;;IAKLS,QAAQ;MACN,IAAIV,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAES,KAAlB,EAAyB;QACvB,OAAOK,KAAK,CAACC,IAAN,CAAWf,YAAY,CAACS,KAAb,CAAmBC,QAA9B,EAAwCM,GAAxC,CAA4CC,OAAO,IAAIA,OAAO,CAACC,OAA/D,CAAP;;;MAGF,OAAOf,gBAAP;;;GAVJ;AAaD;SAEegB,sCAAsCN;EACpD,MAAMX,iBAAiB,GAAGY,KAAK,CAACC,IAAN,CAAWF,OAAO,CAACO,UAAnB,EAA+BC,MAA/B,CAAsC,CAACC,GAAD,EAAMC,IAAN;IAC9DD,GAAG,CAACC,IAAI,CAACC,IAAN,CAAH,GAAiBD,IAAI,CAACE,KAAtB;IACA,OAAOH,GAAP;GAFwB,EAGvB,EAHuB,CAA1B;EAIA,MAAMI,UAAU,GAAG3B,0BAA0B,CAC3Cc,OAD2C,EAE3CX,iBAAiB,CAACE,gBAAD,CAF0B,EAG3CF,iBAH2C,CAA7C;EAKA,OAAOwB,UAAP;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"createIsomorphicStyleSheet.esm.js","sources":["../../../../packages/core/src/renderer/createIsomorphicStyleSheet.ts"],"sourcesContent":["import { DATA_BUCKET_ATTR } from '../constants';\nimport { IsomorphicStyleSheet, StyleBucketName } from '../types';\n\ndeclare global {\n  interface Window {\n    __adoptedStylesheets__: CSSStyleSheet[]\n  }\n};\n\nexport function createIsomorphicStyleSheet(\n  styleElement: HTMLStyleElement | undefined,\n  bucketName: StyleBucketName,\n  elementAttributes: Record<string, string>,\n  constructableStylesheets: boolean,\n): IsomorphicStyleSheet {\n  // no CSSStyleSheet in SSR, just append rules here for server render\n  const __cssRulesForSSR: string[] = [];\n\n  elementAttributes[DATA_BUCKET_ATTR] = bucketName;\n  if (styleElement) {\n    for (const attrName in elementAttributes) {\n      styleElement.setAttribute(attrName, elementAttributes[attrName]);\n    }\n  }\n\n  let sheet: CSSStyleSheet;\n  function insertRule(rule: string) {\n    if (constructableStylesheets) {\n      if (!sheet) {\n        sheet = new CSSStyleSheet();\n        // @ts-expect-error\n        sheet.replaceSync(rule);\n        // @ts-expect-error\n        document.adoptedStyleSheets = [...document.adoptedStyleSheets, sheet];\n        // if (!window.__adoptedStylesheets__) {\n        //   window.__adoptedStylesheets__ = [];\n        // }\n        // window.__adoptedStylesheets__.push(sheet);\n      } else {\n        sheet.insertRule(rule, sheet.cssRules.length);\n      }\n      return sheet.cssRules.length;\n    } else if (styleElement?.sheet) {\n      return styleElement.sheet.insertRule(rule, styleElement.sheet.cssRules.length);\n    }\n\n    return __cssRulesForSSR.push(rule);\n  }\n\n  return {\n    elementAttributes,\n    insertRule,\n    element: styleElement,\n    bucketName,\n    cssRules() {\n      if (constructableStylesheets) {\n        return Array.from(sheet.cssRules).map(cssRule => cssRule.cssText);\n      } else if (styleElement?.sheet) {\n        return Array.from(styleElement.sheet.cssRules).map(cssRule => cssRule.cssText);\n      }\n\n      return __cssRulesForSSR;\n    },\n  };\n}\n\nexport function createIsomorphicStyleSheetFromElement(element: HTMLStyleElement) {\n  const elementAttributes = Array.from(element.attributes).reduce((acc, attr) => {\n    acc[attr.name] = attr.value;\n    return acc;\n  }, {} as Record<string, string>);\n  const stylesheet = createIsomorphicStyleSheet(\n    element,\n    elementAttributes[DATA_BUCKET_ATTR] as StyleBucketName,\n    elementAttributes,\n    false,\n  );\n  return stylesheet;\n}\n"],"names":["createIsomorphicStyleSheet","styleElement","bucketName","elementAttributes","constructableStylesheets","__cssRulesForSSR","DATA_BUCKET_ATTR","attrName","setAttribute","sheet","insertRule","rule","CSSStyleSheet","replaceSync","document","adoptedStyleSheets","cssRules","length","push","element","Array","from","map","cssRule","cssText","createIsomorphicStyleSheetFromElement","attributes","reduce","acc","attr","name","value","stylesheet"],"mappings":";;SASgBA,2BACdC,cACAC,YACAC,mBACAC;;EAGA,MAAMC,gBAAgB,GAAa,EAAnC;EAEAF,iBAAiB,CAACG,gBAAD,CAAjB,GAAsCJ,UAAtC;;EACA,IAAID,YAAJ,EAAkB;IAChB,KAAK,MAAMM,QAAX,IAAuBJ,iBAAvB,EAA0C;MACxCF,YAAY,CAACO,YAAb,CAA0BD,QAA1B,EAAoCJ,iBAAiB,CAACI,QAAD,CAArD;;;;EAIJ,IAAIE,KAAJ;;EACA,SAASC,UAAT,CAAoBC,IAApB;IACE,IAAIP,wBAAJ,EAA8B;MAC5B,IAAI,CAACK,KAAL,EAAY;QACVA,KAAK,GAAG,IAAIG,aAAJ,EAAR,CADU;;QAGVH,KAAK,CAACI,WAAN,CAAkBF,IAAlB,EAHU;;QAKVG,QAAQ,CAACC,kBAAT,GAA8B,CAAC,GAAGD,QAAQ,CAACC,kBAAb,EAAiCN,KAAjC,CAA9B,CALU;;;;OAAZ,MAUO;QACLA,KAAK,CAACC,UAAN,CAAiBC,IAAjB,EAAuBF,KAAK,CAACO,QAAN,CAAeC,MAAtC;;;MAEF,OAAOR,KAAK,CAACO,QAAN,CAAeC,MAAtB;KAdF,MAeO,IAAIhB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAEQ,KAAlB,EAAyB;MAC9B,OAAOR,YAAY,CAACQ,KAAb,CAAmBC,UAAnB,CAA8BC,IAA9B,EAAoCV,YAAY,CAACQ,KAAb,CAAmBO,QAAnB,CAA4BC,MAAhE,CAAP;;;IAGF,OAAOZ,gBAAgB,CAACa,IAAjB,CAAsBP,IAAtB,CAAP;;;EAGF,OAAO;IACLR,iBADK;IAELO,UAFK;IAGLS,OAAO,EAAElB,YAHJ;IAILC,UAJK;;IAKLc,QAAQ;MACN,IAAIZ,wBAAJ,EAA8B;QAC5B,OAAOgB,KAAK,CAACC,IAAN,CAAWZ,KAAK,CAACO,QAAjB,EAA2BM,GAA3B,CAA+BC,OAAO,IAAIA,OAAO,CAACC,OAAlD,CAAP;OADF,MAEO,IAAIvB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,SAAA,GAAAA,YAAY,CAAEQ,KAAlB,EAAyB;QAC9B,OAAOW,KAAK,CAACC,IAAN,CAAWpB,YAAY,CAACQ,KAAb,CAAmBO,QAA9B,EAAwCM,GAAxC,CAA4CC,OAAO,IAAIA,OAAO,CAACC,OAA/D,CAAP;;;MAGF,OAAOnB,gBAAP;;;GAZJ;AAeD;SAEeoB,sCAAsCN;EACpD,MAAMhB,iBAAiB,GAAGiB,KAAK,CAACC,IAAN,CAAWF,OAAO,CAACO,UAAnB,EAA+BC,MAA/B,CAAsC,CAACC,GAAD,EAAMC,IAAN;IAC9DD,GAAG,CAACC,IAAI,CAACC,IAAN,CAAH,GAAiBD,IAAI,CAACE,KAAtB;IACA,OAAOH,GAAP;GAFwB,EAGvB,EAHuB,CAA1B;EAIA,MAAMI,UAAU,GAAGhC,0BAA0B,CAC3CmB,OAD2C,EAE3ChB,iBAAiB,CAACG,gBAAD,CAF0B,EAG3CH,iBAH2C,EAI3C,KAJ2C,CAA7C;EAMA,OAAO6B,UAAP;AACD;;;;"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.cjs.js b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.cjs.js
index 7ab7d23..7b04abd 100644
--- a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.cjs.js
+++ b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.cjs.js
@@ -33,7 +33,7 @@ const styleBucketOrderingMap = /*#__PURE__*/styleBucketOrdering.reduce((acc, cur
  * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.
  */
 
-function getStyleSheetForBucket(bucketName, target, renderer, elementAttributes = {}, metadata) {
+function getStyleSheetForBucket(bucketName, target, renderer, elementAttributes = {}, metadata, constructableStylesheets, styleTagTarget) {
   let stylesheetKey = bucketName;
 
   if (bucketName === 'm' && metadata) {
@@ -47,10 +47,18 @@ function getStyleSheetForBucket(bucketName, target, renderer, elementAttributes
       elementAttributes['media'] = metadata['m'];
     }
 
-    const stylesheet = createIsomorphicStyleSheet.createIsomorphicStyleSheet(tag, bucketName, elementAttributes);
+    const stylesheet = createIsomorphicStyleSheet.createIsomorphicStyleSheet(tag, bucketName, elementAttributes, !!constructableStylesheets);
     renderer.stylesheets[stylesheetKey] = stylesheet;
 
-    if (target && tag) {
+    if (styleTagTarget && tag) {
+      if (styleTagTarget.shadowRoot) {
+        const elementSibling = findElementSibling(styleTagTarget.shadowRoot, bucketName, renderer, metadata);
+        styleTagTarget.shadowRoot.insertBefore(tag, elementSibling);
+      } else {
+        const elementSibling = findElementSibling(styleTagTarget, bucketName, renderer, metadata);
+        styleTagTarget.insertBefore(tag, elementSibling);
+      }
+    } else if (target && tag) {
       const elementSibling = findElementSibling(target, bucketName, renderer, metadata);
       target.head.insertBefore(tag, elementSibling);
     }
@@ -76,10 +84,12 @@ function findElementSibling(target, targetBucket, renderer, metadata) {
 
   let comparer = el => targetOrder - styleBucketOrderingMap[el.getAttribute(constants.DATA_BUCKET_ATTR)];
 
-  let styleElements = target.head.querySelectorAll(`[${constants.DATA_BUCKET_ATTR}]`);
+  const head = target.querySelector('head');
+  const scope = head ? head : target;
+  let styleElements = scope.querySelectorAll(`[${constants.DATA_BUCKET_ATTR}]`);
 
   if (targetBucket === 'm' && metadata) {
-    const mediaElements = target.head.querySelectorAll(`[${constants.DATA_BUCKET_ATTR}="${targetBucket}"]`); // only reduce the scope of the search and change comparer
+    const mediaElements = scope.querySelectorAll(`[${constants.DATA_BUCKET_ATTR}="${targetBucket}"]`); // only reduce the scope of the search and change comparer
     // if there are other media buckets already on the page
 
     if (mediaElements.length) {
diff --git a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.cjs.js.map b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.cjs.js.map
index 9bea621..f4b4455 100644
--- a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.cjs.js.map
+++ b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.cjs.js.map
@@ -1 +1 @@
-{"version":3,"file":"getStyleSheetForBucket.cjs.js","sources":["../../../../packages/core/src/renderer/getStyleSheetForBucket.ts"],"sourcesContent":["import { DATA_BUCKET_ATTR } from '../constants';\nimport { GriffelRenderer, IsomorphicStyleSheet, StyleBucketName } from '../types';\nimport { createIsomorphicStyleSheet } from './createIsomorphicStyleSheet';\n\n/**\n * Ordered style buckets using their short pseudo name.\n *\n * @internal\n */\nexport const styleBucketOrdering: StyleBucketName[] = [\n  // reset styles\n  'r',\n  // catch-all\n  'd',\n  // link\n  'l',\n  // visited\n  'v',\n  // focus-within\n  'w',\n  // focus\n  'f',\n  // focus-visible\n  'i',\n  // hover\n  'h',\n  // active\n  'a',\n  // keyframes\n  'k',\n  // at-rules\n  't',\n  // @media rules\n  'm',\n];\n\n// avoid repeatedly calling `indexOf`to determine order during new insertions\nconst styleBucketOrderingMap = styleBucketOrdering.reduce((acc, cur, j) => {\n  acc[cur as StyleBucketName] = j;\n  return acc;\n}, {} as Record<StyleBucketName, number>);\n\n/**\n * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.\n */\nexport function getStyleSheetForBucket(\n  bucketName: StyleBucketName,\n  target: Document | undefined,\n  renderer: GriffelRenderer,\n  elementAttributes: Record<string, string> = {},\n  metadata?: Record<string, unknown>,\n): IsomorphicStyleSheet {\n  let stylesheetKey: StyleBucketName | string = bucketName;\n\n  if (bucketName === 'm' && metadata) {\n    stylesheetKey = (bucketName + metadata['m']) as string;\n  }\n\n  if (!renderer.stylesheets[stylesheetKey]) {\n    const tag: HTMLStyleElement | undefined = target && target.createElement('style');\n\n    if (bucketName === 'm' && metadata) {\n      elementAttributes['media'] = metadata['m'] as string;\n    }\n\n    const stylesheet = createIsomorphicStyleSheet(tag, bucketName, elementAttributes);\n    renderer.stylesheets[stylesheetKey] = stylesheet;\n\n    if (target && tag) {\n      const elementSibling = findElementSibling(target, bucketName, renderer, metadata);\n      target.head.insertBefore(tag, elementSibling);\n    }\n  }\n\n  return renderer.stylesheets[stylesheetKey]!;\n}\n\n/**\n * Finds an element before which the new bucket style element should be inserted following the\n * bucket sort order\n *\n * @param target - document\n * @param targetBucket - The bucket that should be inserted to DOM\n * @param renderer - Griffel renderer\n * @param metadata - metadata for CSS rule\n * @returns - Smallest style element with greater sort order than the current bucket\n */\nfunction findElementSibling(\n  target: Document,\n  targetBucket: StyleBucketName,\n  renderer: GriffelRenderer,\n  metadata?: Record<string, unknown>,\n) {\n  const targetOrder = styleBucketOrderingMap[targetBucket];\n\n  // Similar to javascript sort comparators where\n  // a positive value is increasing sort order\n  // a negative value is decreasing sort order\n  let comparer: (el: HTMLStyleElement) => number = (el: HTMLStyleElement) =>\n    targetOrder - styleBucketOrderingMap[el.getAttribute(DATA_BUCKET_ATTR) as StyleBucketName];\n\n  let styleElements = target.head.querySelectorAll<HTMLStyleElement>(`[${DATA_BUCKET_ATTR}]`);\n\n  if (targetBucket === 'm' && metadata) {\n    const mediaElements = target.head.querySelectorAll<HTMLStyleElement>(`[${DATA_BUCKET_ATTR}=\"${targetBucket}\"]`);\n    // only reduce the scope of the search and change comparer\n    // if there are other media buckets already on the page\n    if (mediaElements.length) {\n      styleElements = mediaElements;\n      comparer = (el: HTMLStyleElement) => renderer.compareMediaQueries(metadata['m'] as string, el.media);\n    }\n  }\n\n  for (const styleElement of styleElements) {\n    if (comparer(styleElement) < 0) {\n      return styleElement;\n    }\n  }\n\n  return null;\n}\n"],"names":["styleBucketOrdering","styleBucketOrderingMap","reduce","acc","cur","j","getStyleSheetForBucket","bucketName","target","renderer","elementAttributes","metadata","stylesheetKey","stylesheets","tag","createElement","stylesheet","createIsomorphicStyleSheet","elementSibling","findElementSibling","head","insertBefore","targetBucket","targetOrder","comparer","el","getAttribute","DATA_BUCKET_ATTR","styleElements","querySelectorAll","mediaElements","length","compareMediaQueries","media","styleElement"],"mappings":";;;;;;;AAIA;;;;;;MAKaA,mBAAmB,GAAsB;AAEpD,GAFoD;AAIpD,GAJoD;AAMpD,GANoD;AAQpD,GARoD;AAUpD,GAVoD;AAYpD,GAZoD;AAcpD,GAdoD;AAgBpD,GAhBoD;AAkBpD,GAlBoD;AAoBpD,GApBoD;AAsBpD,GAtBoD;AAwBpD,GAxBoD;;AA4BtD,MAAMC,sBAAsB,gBAAGD,mBAAmB,CAACE,MAApB,CAA2B,CAACC,GAAD,EAAMC,GAAN,EAAWC,CAAX;EACxDF,GAAG,CAACC,GAAD,CAAH,GAA8BC,CAA9B;EACA,OAAOF,GAAP;AACD,CAH8B,EAG5B,EAH4B,CAA/B;AAKA;;;;SAGgBG,uBACdC,YACAC,QACAC,UACAC,oBAA4C,IAC5CC;EAEA,IAAIC,aAAa,GAA6BL,UAA9C;;EAEA,IAAIA,UAAU,KAAK,GAAf,IAAsBI,QAA1B,EAAoC;IAClCC,aAAa,GAAIL,UAAU,GAAGI,QAAQ,CAAC,GAAD,CAAtC;;;EAGF,IAAI,CAACF,QAAQ,CAACI,WAAT,CAAqBD,aAArB,CAAL,EAA0C;IACxC,MAAME,GAAG,GAAiCN,MAAM,IAAIA,MAAM,CAACO,aAAP,CAAqB,OAArB,CAApD;;IAEA,IAAIR,UAAU,KAAK,GAAf,IAAsBI,QAA1B,EAAoC;MAClCD,iBAAiB,CAAC,OAAD,CAAjB,GAA6BC,QAAQ,CAAC,GAAD,CAArC;;;IAGF,MAAMK,UAAU,GAAGC,qDAA0B,CAACH,GAAD,EAAMP,UAAN,EAAkBG,iBAAlB,CAA7C;IACAD,QAAQ,CAACI,WAAT,CAAqBD,aAArB,IAAsCI,UAAtC;;IAEA,IAAIR,MAAM,IAAIM,GAAd,EAAmB;MACjB,MAAMI,cAAc,GAAGC,kBAAkB,CAACX,MAAD,EAASD,UAAT,EAAqBE,QAArB,EAA+BE,QAA/B,CAAzC;MACAH,MAAM,CAACY,IAAP,CAAYC,YAAZ,CAAyBP,GAAzB,EAA8BI,cAA9B;;;;EAIJ,OAAOT,QAAQ,CAACI,WAAT,CAAqBD,aAArB,CAAP;AACD;AAED;;;;;;;;;;;AAUA,SAASO,kBAAT,CACEX,MADF,EAEEc,YAFF,EAGEb,QAHF,EAIEE,QAJF;EAME,MAAMY,WAAW,GAAGtB,sBAAsB,CAACqB,YAAD,CAA1C;;;;EAKA,IAAIE,QAAQ,GAAsCC,EAAD,IAC/CF,WAAW,GAAGtB,sBAAsB,CAACwB,EAAE,CAACC,YAAH,CAAgBC,0BAAhB,CAAD,CADtC;;EAGA,IAAIC,aAAa,GAAGpB,MAAM,CAACY,IAAP,CAAYS,gBAAZ,KAAmDF,6BAAnD,CAApB;;EAEA,IAAIL,YAAY,KAAK,GAAjB,IAAwBX,QAA5B,EAAsC;IACpC,MAAMmB,aAAa,GAAGtB,MAAM,CAACY,IAAP,CAAYS,gBAAZ,KAAmDF,+BAAqBL,gBAAxE,CAAtB,CADoC;;;IAIpC,IAAIQ,aAAa,CAACC,MAAlB,EAA0B;MACxBH,aAAa,GAAGE,aAAhB;;MACAN,QAAQ,GAAIC,EAAD,IAA0BhB,QAAQ,CAACuB,mBAAT,CAA6BrB,QAAQ,CAAC,GAAD,CAArC,EAAsDc,EAAE,CAACQ,KAAzD,CAArC;;;;EAIJ,KAAK,MAAMC,YAAX,IAA2BN,aAA3B,EAA0C;IACxC,IAAIJ,QAAQ,CAACU,YAAD,CAAR,GAAyB,CAA7B,EAAgC;MAC9B,OAAOA,YAAP;;;;EAIJ,OAAO,IAAP;AACD;;;;;"}
\ No newline at end of file
+{"version":3,"file":"getStyleSheetForBucket.cjs.js","sources":["../../../../packages/core/src/renderer/getStyleSheetForBucket.ts"],"sourcesContent":["import { DATA_BUCKET_ATTR } from '../constants';\nimport { GriffelRenderer, IsomorphicStyleSheet, StyleBucketName } from '../types';\nimport { createIsomorphicStyleSheet } from './createIsomorphicStyleSheet';\n\n/**\n * Ordered style buckets using their short pseudo name.\n *\n * @internal\n */\nexport const styleBucketOrdering: StyleBucketName[] = [\n  // reset styles\n  'r',\n  // catch-all\n  'd',\n  // link\n  'l',\n  // visited\n  'v',\n  // focus-within\n  'w',\n  // focus\n  'f',\n  // focus-visible\n  'i',\n  // hover\n  'h',\n  // active\n  'a',\n  // keyframes\n  'k',\n  // at-rules\n  't',\n  // @media rules\n  'm',\n];\n\n// avoid repeatedly calling `indexOf`to determine order during new insertions\nconst styleBucketOrderingMap = styleBucketOrdering.reduce((acc, cur, j) => {\n  acc[cur as StyleBucketName] = j;\n  return acc;\n}, {} as Record<StyleBucketName, number>);\n\n/**\n * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.\n */\nexport function getStyleSheetForBucket(\n  bucketName: StyleBucketName,\n  target: Document | undefined,\n  renderer: GriffelRenderer,\n  elementAttributes: Record<string, string> = {},\n  metadata?: Record<string, unknown>,\n  constructableStylesheets?: boolean,\n  styleTagTarget?: HTMLElement | null,\n): IsomorphicStyleSheet {\n  let stylesheetKey: StyleBucketName | string = bucketName;\n\n  if (bucketName === 'm' && metadata) {\n    stylesheetKey = (bucketName + metadata['m']) as string;\n  }\n\n  if (!renderer.stylesheets[stylesheetKey]) {\n    const tag: HTMLStyleElement | undefined = target && target.createElement('style');\n\n    if (bucketName === 'm' && metadata) {\n      elementAttributes['media'] = metadata['m'] as string;\n    }\n\n    const stylesheet = createIsomorphicStyleSheet(tag, bucketName, elementAttributes, !!constructableStylesheets);\n    renderer.stylesheets[stylesheetKey] = stylesheet;\n\n    if (styleTagTarget && tag) {\n      if (styleTagTarget.shadowRoot) {\n        const elementSibling = findElementSibling(styleTagTarget.shadowRoot, bucketName, renderer, metadata);\n        styleTagTarget.shadowRoot.insertBefore(tag, elementSibling);\n      } else {\n        const elementSibling = findElementSibling(styleTagTarget, bucketName, renderer, metadata);\n        styleTagTarget.insertBefore(tag, elementSibling);\n      }\n    } else if (target && tag) {\n      const elementSibling = findElementSibling(target, bucketName, renderer, metadata);\n      target.head.insertBefore(tag, elementSibling);\n    }\n  }\n\n  return renderer.stylesheets[stylesheetKey]!;\n}\n\n/**\n * Finds an element before which the new bucket style element should be inserted following the\n * bucket sort order\n *\n * @param target - document\n * @param targetBucket - The bucket that should be inserted to DOM\n * @param renderer - Griffel renderer\n * @param metadata - metadata for CSS rule\n * @returns - Smallest style element with greater sort order than the current bucket\n */\nfunction findElementSibling(\n  target: Document | HTMLElement | ShadowRoot,\n  targetBucket: StyleBucketName,\n  renderer: GriffelRenderer,\n  metadata?: Record<string, unknown>,\n) {\n  const targetOrder = styleBucketOrderingMap[targetBucket];\n\n  // Similar to javascript sort comparators where\n  // a positive value is increasing sort order\n  // a negative value is decreasing sort order\n  let comparer: (el: HTMLStyleElement) => number = (el: HTMLStyleElement) =>\n    targetOrder - styleBucketOrderingMap[el.getAttribute(DATA_BUCKET_ATTR) as StyleBucketName];\n\n  const head = target.querySelector('head');\n  const scope = head ? head : target;\n  let styleElements = scope.querySelectorAll<HTMLStyleElement>(`[${DATA_BUCKET_ATTR}]`);\n\n  if (targetBucket === 'm' && metadata) {\n    const mediaElements = scope.querySelectorAll<HTMLStyleElement>(`[${DATA_BUCKET_ATTR}=\"${targetBucket}\"]`);\n    // only reduce the scope of the search and change comparer\n    // if there are other media buckets already on the page\n    if (mediaElements.length) {\n      styleElements = mediaElements;\n      comparer = (el: HTMLStyleElement) => renderer.compareMediaQueries(metadata['m'] as string, el.media);\n    }\n  }\n\n  for (const styleElement of styleElements) {\n    if (comparer(styleElement) < 0) {\n      return styleElement;\n    }\n  }\n\n  return null;\n}\n"],"names":["styleBucketOrdering","styleBucketOrderingMap","reduce","acc","cur","j","getStyleSheetForBucket","bucketName","target","renderer","elementAttributes","metadata","constructableStylesheets","styleTagTarget","stylesheetKey","stylesheets","tag","createElement","stylesheet","createIsomorphicStyleSheet","shadowRoot","elementSibling","findElementSibling","insertBefore","head","targetBucket","targetOrder","comparer","el","getAttribute","DATA_BUCKET_ATTR","querySelector","scope","styleElements","querySelectorAll","mediaElements","length","compareMediaQueries","media","styleElement"],"mappings":"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"}
\ No newline at end of file
diff --git a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.d.ts b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.d.ts
index da88b82..9852e4f 100644
--- a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.d.ts
+++ b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.d.ts
@@ -8,4 +8,4 @@ export declare const styleBucketOrdering: StyleBucketName[];
 /**
  * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.
  */
-export declare function getStyleSheetForBucket(bucketName: StyleBucketName, target: Document | undefined, renderer: GriffelRenderer, elementAttributes?: Record<string, string>, metadata?: Record<string, unknown>): IsomorphicStyleSheet;
+export declare function getStyleSheetForBucket(bucketName: StyleBucketName, target: Document | undefined, renderer: GriffelRenderer, elementAttributes?: Record<string, string>, metadata?: Record<string, unknown>, constructableStylesheets?: boolean, styleTagTarget?: HTMLElement | null): IsomorphicStyleSheet;
diff --git a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js
index 9ec58b8..0e96ca3 100644
--- a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js
+++ b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js
@@ -29,7 +29,7 @@ const styleBucketOrderingMap = /*#__PURE__*/styleBucketOrdering.reduce((acc, cur
  * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.
  */
 
-function getStyleSheetForBucket(bucketName, target, renderer, elementAttributes = {}, metadata) {
+function getStyleSheetForBucket(bucketName, target, renderer, elementAttributes = {}, metadata, constructableStylesheets, styleTagTarget) {
   let stylesheetKey = bucketName;
 
   if (bucketName === 'm' && metadata) {
@@ -43,10 +43,18 @@ function getStyleSheetForBucket(bucketName, target, renderer, elementAttributes
       elementAttributes['media'] = metadata['m'];
     }
 
-    const stylesheet = createIsomorphicStyleSheet(tag, bucketName, elementAttributes);
+    const stylesheet = createIsomorphicStyleSheet(tag, bucketName, elementAttributes, !!constructableStylesheets);
     renderer.stylesheets[stylesheetKey] = stylesheet;
 
-    if (target && tag) {
+    if (styleTagTarget && tag) {
+      if (styleTagTarget.shadowRoot) {
+        const elementSibling = findElementSibling(styleTagTarget.shadowRoot, bucketName, renderer, metadata);
+        styleTagTarget.shadowRoot.insertBefore(tag, elementSibling);
+      } else {
+        const elementSibling = findElementSibling(styleTagTarget, bucketName, renderer, metadata);
+        styleTagTarget.insertBefore(tag, elementSibling);
+      }
+    } else if (target && tag) {
       const elementSibling = findElementSibling(target, bucketName, renderer, metadata);
       target.head.insertBefore(tag, elementSibling);
     }
@@ -72,10 +80,12 @@ function findElementSibling(target, targetBucket, renderer, metadata) {
 
   let comparer = el => targetOrder - styleBucketOrderingMap[el.getAttribute(DATA_BUCKET_ATTR)];
 
-  let styleElements = target.head.querySelectorAll(`[${DATA_BUCKET_ATTR}]`);
+  const head = target.querySelector('head');
+  const scope = head ? head : target;
+  let styleElements = scope.querySelectorAll(`[${DATA_BUCKET_ATTR}]`);
 
   if (targetBucket === 'm' && metadata) {
-    const mediaElements = target.head.querySelectorAll(`[${DATA_BUCKET_ATTR}="${targetBucket}"]`); // only reduce the scope of the search and change comparer
+    const mediaElements = scope.querySelectorAll(`[${DATA_BUCKET_ATTR}="${targetBucket}"]`); // only reduce the scope of the search and change comparer
     // if there are other media buckets already on the page
 
     if (mediaElements.length) {
diff --git a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js.map b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js.map
index 6535618..ebcef52 100644
--- a/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js.map
+++ b/node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js.map
@@ -1 +1 @@
-{"version":3,"file":"getStyleSheetForBucket.esm.js","sources":["../../../../packages/core/src/renderer/getStyleSheetForBucket.ts"],"sourcesContent":["import { DATA_BUCKET_ATTR } from '../constants';\nimport { GriffelRenderer, IsomorphicStyleSheet, StyleBucketName } from '../types';\nimport { createIsomorphicStyleSheet } from './createIsomorphicStyleSheet';\n\n/**\n * Ordered style buckets using their short pseudo name.\n *\n * @internal\n */\nexport const styleBucketOrdering: StyleBucketName[] = [\n  // reset styles\n  'r',\n  // catch-all\n  'd',\n  // link\n  'l',\n  // visited\n  'v',\n  // focus-within\n  'w',\n  // focus\n  'f',\n  // focus-visible\n  'i',\n  // hover\n  'h',\n  // active\n  'a',\n  // keyframes\n  'k',\n  // at-rules\n  't',\n  // @media rules\n  'm',\n];\n\n// avoid repeatedly calling `indexOf`to determine order during new insertions\nconst styleBucketOrderingMap = styleBucketOrdering.reduce((acc, cur, j) => {\n  acc[cur as StyleBucketName] = j;\n  return acc;\n}, {} as Record<StyleBucketName, number>);\n\n/**\n * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.\n */\nexport function getStyleSheetForBucket(\n  bucketName: StyleBucketName,\n  target: Document | undefined,\n  renderer: GriffelRenderer,\n  elementAttributes: Record<string, string> = {},\n  metadata?: Record<string, unknown>,\n): IsomorphicStyleSheet {\n  let stylesheetKey: StyleBucketName | string = bucketName;\n\n  if (bucketName === 'm' && metadata) {\n    stylesheetKey = (bucketName + metadata['m']) as string;\n  }\n\n  if (!renderer.stylesheets[stylesheetKey]) {\n    const tag: HTMLStyleElement | undefined = target && target.createElement('style');\n\n    if (bucketName === 'm' && metadata) {\n      elementAttributes['media'] = metadata['m'] as string;\n    }\n\n    const stylesheet = createIsomorphicStyleSheet(tag, bucketName, elementAttributes);\n    renderer.stylesheets[stylesheetKey] = stylesheet;\n\n    if (target && tag) {\n      const elementSibling = findElementSibling(target, bucketName, renderer, metadata);\n      target.head.insertBefore(tag, elementSibling);\n    }\n  }\n\n  return renderer.stylesheets[stylesheetKey]!;\n}\n\n/**\n * Finds an element before which the new bucket style element should be inserted following the\n * bucket sort order\n *\n * @param target - document\n * @param targetBucket - The bucket that should be inserted to DOM\n * @param renderer - Griffel renderer\n * @param metadata - metadata for CSS rule\n * @returns - Smallest style element with greater sort order than the current bucket\n */\nfunction findElementSibling(\n  target: Document,\n  targetBucket: StyleBucketName,\n  renderer: GriffelRenderer,\n  metadata?: Record<string, unknown>,\n) {\n  const targetOrder = styleBucketOrderingMap[targetBucket];\n\n  // Similar to javascript sort comparators where\n  // a positive value is increasing sort order\n  // a negative value is decreasing sort order\n  let comparer: (el: HTMLStyleElement) => number = (el: HTMLStyleElement) =>\n    targetOrder - styleBucketOrderingMap[el.getAttribute(DATA_BUCKET_ATTR) as StyleBucketName];\n\n  let styleElements = target.head.querySelectorAll<HTMLStyleElement>(`[${DATA_BUCKET_ATTR}]`);\n\n  if (targetBucket === 'm' && metadata) {\n    const mediaElements = target.head.querySelectorAll<HTMLStyleElement>(`[${DATA_BUCKET_ATTR}=\"${targetBucket}\"]`);\n    // only reduce the scope of the search and change comparer\n    // if there are other media buckets already on the page\n    if (mediaElements.length) {\n      styleElements = mediaElements;\n      comparer = (el: HTMLStyleElement) => renderer.compareMediaQueries(metadata['m'] as string, el.media);\n    }\n  }\n\n  for (const styleElement of styleElements) {\n    if (comparer(styleElement) < 0) {\n      return styleElement;\n    }\n  }\n\n  return null;\n}\n"],"names":["styleBucketOrdering","styleBucketOrderingMap","reduce","acc","cur","j","getStyleSheetForBucket","bucketName","target","renderer","elementAttributes","metadata","stylesheetKey","stylesheets","tag","createElement","stylesheet","createIsomorphicStyleSheet","elementSibling","findElementSibling","head","insertBefore","targetBucket","targetOrder","comparer","el","getAttribute","DATA_BUCKET_ATTR","styleElements","querySelectorAll","mediaElements","length","compareMediaQueries","media","styleElement"],"mappings":";;;AAIA;;;;;;MAKaA,mBAAmB,GAAsB;AAEpD,GAFoD;AAIpD,GAJoD;AAMpD,GANoD;AAQpD,GARoD;AAUpD,GAVoD;AAYpD,GAZoD;AAcpD,GAdoD;AAgBpD,GAhBoD;AAkBpD,GAlBoD;AAoBpD,GApBoD;AAsBpD,GAtBoD;AAwBpD,GAxBoD;;AA4BtD,MAAMC,sBAAsB,gBAAGD,mBAAmB,CAACE,MAApB,CAA2B,CAACC,GAAD,EAAMC,GAAN,EAAWC,CAAX;EACxDF,GAAG,CAACC,GAAD,CAAH,GAA8BC,CAA9B;EACA,OAAOF,GAAP;AACD,CAH8B,EAG5B,EAH4B,CAA/B;AAKA;;;;SAGgBG,uBACdC,YACAC,QACAC,UACAC,oBAA4C,IAC5CC;EAEA,IAAIC,aAAa,GAA6BL,UAA9C;;EAEA,IAAIA,UAAU,KAAK,GAAf,IAAsBI,QAA1B,EAAoC;IAClCC,aAAa,GAAIL,UAAU,GAAGI,QAAQ,CAAC,GAAD,CAAtC;;;EAGF,IAAI,CAACF,QAAQ,CAACI,WAAT,CAAqBD,aAArB,CAAL,EAA0C;IACxC,MAAME,GAAG,GAAiCN,MAAM,IAAIA,MAAM,CAACO,aAAP,CAAqB,OAArB,CAApD;;IAEA,IAAIR,UAAU,KAAK,GAAf,IAAsBI,QAA1B,EAAoC;MAClCD,iBAAiB,CAAC,OAAD,CAAjB,GAA6BC,QAAQ,CAAC,GAAD,CAArC;;;IAGF,MAAMK,UAAU,GAAGC,0BAA0B,CAACH,GAAD,EAAMP,UAAN,EAAkBG,iBAAlB,CAA7C;IACAD,QAAQ,CAACI,WAAT,CAAqBD,aAArB,IAAsCI,UAAtC;;IAEA,IAAIR,MAAM,IAAIM,GAAd,EAAmB;MACjB,MAAMI,cAAc,GAAGC,kBAAkB,CAACX,MAAD,EAASD,UAAT,EAAqBE,QAArB,EAA+BE,QAA/B,CAAzC;MACAH,MAAM,CAACY,IAAP,CAAYC,YAAZ,CAAyBP,GAAzB,EAA8BI,cAA9B;;;;EAIJ,OAAOT,QAAQ,CAACI,WAAT,CAAqBD,aAArB,CAAP;AACD;AAED;;;;;;;;;;;AAUA,SAASO,kBAAT,CACEX,MADF,EAEEc,YAFF,EAGEb,QAHF,EAIEE,QAJF;EAME,MAAMY,WAAW,GAAGtB,sBAAsB,CAACqB,YAAD,CAA1C;;;;EAKA,IAAIE,QAAQ,GAAsCC,EAAD,IAC/CF,WAAW,GAAGtB,sBAAsB,CAACwB,EAAE,CAACC,YAAH,CAAgBC,gBAAhB,CAAD,CADtC;;EAGA,IAAIC,aAAa,GAAGpB,MAAM,CAACY,IAAP,CAAYS,gBAAZ,KAAmDF,mBAAnD,CAApB;;EAEA,IAAIL,YAAY,KAAK,GAAjB,IAAwBX,QAA5B,EAAsC;IACpC,MAAMmB,aAAa,GAAGtB,MAAM,CAACY,IAAP,CAAYS,gBAAZ,KAAmDF,qBAAqBL,gBAAxE,CAAtB,CADoC;;;IAIpC,IAAIQ,aAAa,CAACC,MAAlB,EAA0B;MACxBH,aAAa,GAAGE,aAAhB;;MACAN,QAAQ,GAAIC,EAAD,IAA0BhB,QAAQ,CAACuB,mBAAT,CAA6BrB,QAAQ,CAAC,GAAD,CAArC,EAAsDc,EAAE,CAACQ,KAAzD,CAArC;;;;EAIJ,KAAK,MAAMC,YAAX,IAA2BN,aAA3B,EAA0C;IACxC,IAAIJ,QAAQ,CAACU,YAAD,CAAR,GAAyB,CAA7B,EAAgC;MAC9B,OAAOA,YAAP;;;;EAIJ,OAAO,IAAP;AACD;;;;"}
\ No newline at end of file
+{"version":3,"file":"getStyleSheetForBucket.esm.js","sources":["../../../../packages/core/src/renderer/getStyleSheetForBucket.ts"],"sourcesContent":["import { DATA_BUCKET_ATTR } from '../constants';\nimport { GriffelRenderer, IsomorphicStyleSheet, StyleBucketName } from '../types';\nimport { createIsomorphicStyleSheet } from './createIsomorphicStyleSheet';\n\n/**\n * Ordered style buckets using their short pseudo name.\n *\n * @internal\n */\nexport const styleBucketOrdering: StyleBucketName[] = [\n  // reset styles\n  'r',\n  // catch-all\n  'd',\n  // link\n  'l',\n  // visited\n  'v',\n  // focus-within\n  'w',\n  // focus\n  'f',\n  // focus-visible\n  'i',\n  // hover\n  'h',\n  // active\n  'a',\n  // keyframes\n  'k',\n  // at-rules\n  't',\n  // @media rules\n  'm',\n];\n\n// avoid repeatedly calling `indexOf`to determine order during new insertions\nconst styleBucketOrderingMap = styleBucketOrdering.reduce((acc, cur, j) => {\n  acc[cur as StyleBucketName] = j;\n  return acc;\n}, {} as Record<StyleBucketName, number>);\n\n/**\n * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.\n */\nexport function getStyleSheetForBucket(\n  bucketName: StyleBucketName,\n  target: Document | undefined,\n  renderer: GriffelRenderer,\n  elementAttributes: Record<string, string> = {},\n  metadata?: Record<string, unknown>,\n  constructableStylesheets?: boolean,\n  styleTagTarget?: HTMLElement | null,\n): IsomorphicStyleSheet {\n  let stylesheetKey: StyleBucketName | string = bucketName;\n\n  if (bucketName === 'm' && metadata) {\n    stylesheetKey = (bucketName + metadata['m']) as string;\n  }\n\n  if (!renderer.stylesheets[stylesheetKey]) {\n    const tag: HTMLStyleElement | undefined = target && target.createElement('style');\n\n    if (bucketName === 'm' && metadata) {\n      elementAttributes['media'] = metadata['m'] as string;\n    }\n\n    const stylesheet = createIsomorphicStyleSheet(tag, bucketName, elementAttributes, !!constructableStylesheets);\n    renderer.stylesheets[stylesheetKey] = stylesheet;\n\n    if (styleTagTarget && tag) {\n      if (styleTagTarget.shadowRoot) {\n        const elementSibling = findElementSibling(styleTagTarget.shadowRoot, bucketName, renderer, metadata);\n        styleTagTarget.shadowRoot.insertBefore(tag, elementSibling);\n      } else {\n        const elementSibling = findElementSibling(styleTagTarget, bucketName, renderer, metadata);\n        styleTagTarget.insertBefore(tag, elementSibling);\n      }\n    } else if (target && tag) {\n      const elementSibling = findElementSibling(target, bucketName, renderer, metadata);\n      target.head.insertBefore(tag, elementSibling);\n    }\n  }\n\n  return renderer.stylesheets[stylesheetKey]!;\n}\n\n/**\n * Finds an element before which the new bucket style element should be inserted following the\n * bucket sort order\n *\n * @param target - document\n * @param targetBucket - The bucket that should be inserted to DOM\n * @param renderer - Griffel renderer\n * @param metadata - metadata for CSS rule\n * @returns - Smallest style element with greater sort order than the current bucket\n */\nfunction findElementSibling(\n  target: Document | HTMLElement | ShadowRoot,\n  targetBucket: StyleBucketName,\n  renderer: GriffelRenderer,\n  metadata?: Record<string, unknown>,\n) {\n  const targetOrder = styleBucketOrderingMap[targetBucket];\n\n  // Similar to javascript sort comparators where\n  // a positive value is increasing sort order\n  // a negative value is decreasing sort order\n  let comparer: (el: HTMLStyleElement) => number = (el: HTMLStyleElement) =>\n    targetOrder - styleBucketOrderingMap[el.getAttribute(DATA_BUCKET_ATTR) as StyleBucketName];\n\n  const head = target.querySelector('head');\n  const scope = head ? head : target;\n  let styleElements = scope.querySelectorAll<HTMLStyleElement>(`[${DATA_BUCKET_ATTR}]`);\n\n  if (targetBucket === 'm' && metadata) {\n    const mediaElements = scope.querySelectorAll<HTMLStyleElement>(`[${DATA_BUCKET_ATTR}=\"${targetBucket}\"]`);\n    // only reduce the scope of the search and change comparer\n    // if there are other media buckets already on the page\n    if (mediaElements.length) {\n      styleElements = mediaElements;\n      comparer = (el: HTMLStyleElement) => renderer.compareMediaQueries(metadata['m'] as string, el.media);\n    }\n  }\n\n  for (const styleElement of styleElements) {\n    if (comparer(styleElement) < 0) {\n      return styleElement;\n    }\n  }\n\n  return null;\n}\n"],"names":["styleBucketOrdering","styleBucketOrderingMap","reduce","acc","cur","j","getStyleSheetForBucket","bucketName","target","renderer","elementAttributes","metadata","constructableStylesheets","styleTagTarget","stylesheetKey","stylesheets","tag","createElement","stylesheet","createIsomorphicStyleSheet","shadowRoot","elementSibling","findElementSibling","insertBefore","head","targetBucket","targetOrder","comparer","el","getAttribute","DATA_BUCKET_ATTR","querySelector","scope","styleElements","querySelectorAll","mediaElements","length","compareMediaQueries","media","styleElement"],"mappings":"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"}
\ No newline at end of file
