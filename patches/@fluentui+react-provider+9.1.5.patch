diff --git a/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js b/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js
index ebb5511..dee482a 100644
--- a/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js
+++ b/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js
@@ -25,6 +25,7 @@ export const useFluentProvider_unstable = (props, ref) => {
   const {
     dir = parentContext.dir,
     targetDocument = parentContext.targetDocument,
+    targetElement,
     theme
   } = props;
   const mergedTheme = mergeThemes(parentTheme, theme);
@@ -45,7 +46,8 @@ export const useFluentProvider_unstable = (props, ref) => {
     theme: mergedTheme,
     themeClassName: useFluentProviderThemeStyleTag({
       theme: mergedTheme,
-      targetDocument
+      targetDocument,
+      targetElement
     }),
     components: {
       root: 'div'
diff --git a/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js b/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js
index afebd7f..6e39642 100644
--- a/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js
+++ b/node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js
@@ -4,14 +4,22 @@ import { fluentProviderClassNames } from './useFluentProviderStyles'; // String
 
 const useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useIsomorphicLayoutEffect;
 
-const createStyleTag = (target, id) => {
+const createStyleTag = (target, targetElement, id) => {
   if (!target) {
     return undefined;
   }
 
   const tag = target.createElement('style');
   tag.setAttribute('id', id);
-  target.head.appendChild(tag);
+  if (targetElement) {
+    if (targetElement.shadowRoot) {
+      targetElement.shadowRoot.appendChild(tag);
+    } else {
+      targetElement.appendChild(tag);
+    }
+  } else {
+    target.head.appendChild(tag);
+  }
   return tag;
 };
 
@@ -39,6 +47,7 @@ const insertSheet = (tag, rule) => {
 export const useFluentProviderThemeStyleTag = options => {
   const {
     targetDocument,
+    targetElement,
     theme
   } = options;
   const styleTag = React.useRef();
@@ -51,7 +60,7 @@ export const useFluentProviderThemeStyleTag = options => {
   }, [theme]);
   const rule = `.${styleTagId} { ${cssVarsAsString} }`;
   useInsertionEffect(() => {
-    styleTag.current = createStyleTag(targetDocument, styleTagId);
+    styleTag.current = createStyleTag(targetDocument, targetElement, styleTagId);
 
     if (styleTag.current) {
       insertSheet(styleTag.current, rule);
